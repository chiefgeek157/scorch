# Generated by Django 4.1.5 on 2023-01-29 00:10

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Attribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('type', models.IntegerField(choices=[(1, 'Text'), (2, 'String'), (3, 'Float'), (4, 'Integer'), (5, 'Boolean'), (6, 'Date')])),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Entity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='The name of this entity.', max_length=250)),
                ('description', models.TextField(blank=True, help_text='A description of the entity.')),
            ],
            options={
                'verbose_name_plural': 'Entities',
            },
        ),
        migrations.CreateModel(
            name='EntityType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='A type of entity for which a Scorecard will becreated, such as Application.', max_length=50, unique=True)),
                ('description', models.TextField(blank=True)),
                ('attributes', models.ManyToManyField(related_name='entity_types', to='scorch.attribute')),
            ],
        ),
        migrations.CreateModel(
            name='Response',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(choices=[(3, 'Reviewed'), (2, 'Complete'), (1, 'Draft')])),
                ('scored_on', models.DateField(blank=True, null=True)),
                ('scored_by', models.CharField(blank=True, max_length=50)),
                ('reviewed_on', models.DateField(blank=True, null=True)),
                ('reviewed_by', models.CharField(blank=True, max_length=50)),
                ('score', models.FloatField(editable=False, null=True)),
                ('comment', models.TextField(blank=True)),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='scorch.entity')),
            ],
        ),
        migrations.CreateModel(
            name='Scorecard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='The name of the Scorecard, typically named for theAsset Type with which it is associated.', max_length=100, unique=True)),
                ('desciption', models.TextField(blank=True)),
                ('max_score', models.FloatField(default=100.0, help_text='The maximum score allowed for any item.')),
                ('score_level_label', models.CharField(default='Conformance', max_length=50)),
                ('default_weight', models.FloatField(default=100.0, help_text='The default weight appliedto all ScoreItems if they do not have an override or formula.')),
                ('default_mandatory', models.BooleanField(default=False)),
                ('scorer_type', models.IntegerField(choices=[(1, 'Weighted Deduction Scorer')])),
                ('score_level_computer_type', models.IntegerField(choices=[(1, 'Threshhold Score Level Computer')])),
                ('weight_computer_type', models.IntegerField(choices=[(1, 'Expression Weight Computer')])),
                ('mandatory_computer_type', models.IntegerField(choices=[(1, 'Expression Mandatory Computer')])),
                ('entity_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scorecards', to='scorch.entitytype')),
            ],
        ),
        migrations.CreateModel(
            name='ScorecardVersion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=15)),
                ('scorecard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='versions', to='scorch.scorecard')),
            ],
        ),
        migrations.CreateModel(
            name='ScoreLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(help_text='The order of this ScoreLevel among its peers within the scorecard.')),
                ('name', models.CharField(max_length=20)),
                ('score', models.FloatField(help_text='The score assigned by thislevel when directly chosen, must be <= the Scorecard max score.')),
                ('threshold', models.FloatField(help_text='The lower value at which this level is displayed for computed scores. Must be less than score to be useful.')),
                ('scorecard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='score_levels', to='scorch.scorecard')),
            ],
        ),
        migrations.CreateModel(
            name='ScoringItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('explanation', models.TextField(blank=True)),
                ('owner', models.CharField(blank=True, max_length=50, null=True)),
                ('weight_expr', models.TextField(blank=True, null=True)),
                ('mandatory_expr', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True)),
                ('status', models.IntegerField(choices=[(1, 'Not Yet Started'), (2, 'In Progress'), (3, 'COmpleted')])),
                ('min_expense', models.FloatField(default=0.0)),
                ('max_expense', models.FloatField(default=0.0)),
                ('min_effort', models.FloatField(default=0.0)),
                ('max_effort', models.FloatField(default=0.0)),
                ('units', models.IntegerField(choices=[(1, 'hours'), (2, 'days'), (3, 'weeks'), (4, 'months')], default=1)),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='scorch.entity')),
            ],
        ),
        migrations.CreateModel(
            name='ScoringItemVersion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='scorch.scoringitemversion')),
                ('scorecard_version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scoring_item_versions', to='scorch.scorecardversion')),
                ('scoring_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='versions', to='scorch.scoringitem')),
            ],
        ),
        migrations.CreateModel(
            name='ScoringItemResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weight', models.FloatField(blank=True, null=True)),
                ('mandatory', models.BooleanField(blank=True, null=True)),
                ('comment', models.TextField(blank=True)),
                ('score', models.FloatField(editable=False, null=True)),
                ('response', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scoring_item_responses', to='scorch.response')),
                ('score_item_version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scoring_item_responses', to='scorch.scoringitemversion')),
                ('score_level', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='scoring_item_responses', to='scorch.scorelevel')),
                ('tasks', models.ManyToManyField(related_name='scoring_item_responses', to='scorch.task')),
            ],
        ),
        migrations.CreateModel(
            name='ScoringItemLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('description', models.TextField(blank=True)),
                ('order', models.PositiveIntegerField(help_text='The order of the ScoringItemLevel among its peers within the Scorecard.')),
                ('help_base_url', models.URLField(help_text='The base URL for autogeneratedlinks to further help ScoreItems at this level')),
                ('scorecard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='score_item_levels', to='scorch.scorecard')),
            ],
        ),
        migrations.AddField(
            model_name='scoringitem',
            name='level',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scoring_items', to='scorch.scoringitemlevel'),
        ),
        migrations.AddField(
            model_name='scoringitem',
            name='scorecard',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='scoring_items', to='scorch.scorecard'),
        ),
        migrations.AddField(
            model_name='response',
            name='scorecard_version',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='scorch.scorecardversion'),
        ),
        migrations.AddField(
            model_name='entity',
            name='entity_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entities', to='scorch.entitytype'),
        ),
        migrations.CreateModel(
            name='AttributeValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value_str', models.TextField(blank=True, null=True)),
                ('value_int', models.IntegerField(blank=True, null=True)),
                ('value_float', models.FloatField(blank=True, null=True)),
                ('value_bool', models.BooleanField(blank=True, null=True)),
                ('value_date', models.DateField(blank=True, null=True)),
                ('attribute', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='values', to='scorch.attribute')),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attribute_values', to='scorch.entity')),
            ],
        ),
    ]
